// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wex.Context;

namespace Wex.Context.Migrations
{
    [DbContext(typeof(WexContext))]
    [Migration("20190217184445_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wex.Context.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height");

                    b.Property<int?>("PreviewId");

                    b.Property<string>("Url");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("PreviewId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Wex.Context.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<long>("CreatedUtc");

                    b.Property<string>("Domain");

                    b.Property<bool>("IsMeta");

                    b.Property<bool>("IsSelf");

                    b.Property<bool>("IsVideo");

                    b.Property<string>("LinkFlairText");

                    b.Property<string>("LinkFlairType");

                    b.Property<string>("Name");

                    b.Property<string>("Permalink");

                    b.Property<bool>("Pinned");

                    b.Property<int?>("PreviewId");

                    b.Property<string>("RedditId");

                    b.Property<string>("SelfText");

                    b.Property<bool>("Stickied");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("PreviewId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Wex.Context.Models.Preview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled");

                    b.Property<int?>("SourceId");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Previews");
                });

            modelBuilder.Entity("Wex.Context.Models.Image", b =>
                {
                    b.HasOne("Wex.Context.Models.Preview")
                        .WithMany("Resolutions")
                        .HasForeignKey("PreviewId");
                });

            modelBuilder.Entity("Wex.Context.Models.Post", b =>
                {
                    b.HasOne("Wex.Context.Models.Preview", "Preview")
                        .WithMany()
                        .HasForeignKey("PreviewId");
                });

            modelBuilder.Entity("Wex.Context.Models.Preview", b =>
                {
                    b.HasOne("Wex.Context.Models.Image", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
